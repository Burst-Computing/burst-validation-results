return(g)
}
generate_boxplot <- function(size) {
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
gran2 <- read.csv(paste(size, "/gran2.csv", sep=''), header=TRUE, sep=",")
gran4 <- read.csv(paste(size, "/gran4.csv", sep=''), header=TRUE, sep=",")
gran6 <- read.csv(paste(size, "/gran6.csv", sep=''), header=TRUE, sep=",")
gran12 <- read.csv(paste(size, "/gran12.csv", sep=''), header=TRUE, sep=",")
gran24 <- read.csv(paste(size, "/gran24.csv", sep=''), header=TRUE, sep=",")
gran48 <- read.csv(paste(size, "/gran48.csv", sep=''), header=TRUE, sep=",")
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp))
g <- ggplot() +
scale_y_discrete(limits=c("FaaS", "2", "4", "6", "12", "24", "48")) +
scale_x_continuous(limits=c(0,22)) +
geom_boxplot(data=gran1, aes(x=worker_start_tstamp - host_job_create_tstamp, y="FaaS", fill="1"), outlier.size = 0.1) +
geom_boxplot(data=gran2, aes(x=worker_start_tstamp - host_job_create_tstamp, y="2", fill="2")) +
geom_boxplot(data=gran4, aes(x=worker_start_tstamp - host_job_create_tstamp, y="4", fill="2")) +
geom_boxplot(data=gran6, aes(x=worker_start_tstamp - host_job_create_tstamp, y="6", fill="2")) +
geom_boxplot(data=gran12, aes(x=worker_start_tstamp - host_job_create_tstamp, y="12", fill="2")) +
geom_boxplot(data=gran24, aes(x=worker_start_tstamp - host_job_create_tstamp, y="24", fill="2")) +
geom_boxplot(data=gran48, aes(x=worker_start_tstamp - host_job_create_tstamp, y="48", fill="2")) +
#xlab("Startup time (s)") +
#ylab("Granularity") +
#disable x and y axis labels
labs(x = NULL, y = NULL) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "none", text = element_text(family = "Linux Libertine")) +
#   set title 10px
theme(plot.title = element_text(size=10)) +
# set axis title 8px
theme(axis.title.x = element_text(size=8), axis.title.y = element_text(size=8)) +
# quit horizontal grid
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
return(g)
}
generate_boxplot <- function(size) {
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
gran2 <- read.csv(paste(size, "/gran2.csv", sep=''), header=TRUE, sep=",")
gran4 <- read.csv(paste(size, "/gran4.csv", sep=''), header=TRUE, sep=",")
gran6 <- read.csv(paste(size, "/gran6.csv", sep=''), header=TRUE, sep=",")
gran12 <- read.csv(paste(size, "/gran12.csv", sep=''), header=TRUE, sep=",")
gran24 <- read.csv(paste(size, "/gran24.csv", sep=''), header=TRUE, sep=",")
gran48 <- read.csv(paste(size, "/gran48.csv", sep=''), header=TRUE, sep=",")
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp))
g <- ggplot() +
scale_y_discrete(limits=c("FaaS", "2", "4", "6", "12", "24", "48")) +
scale_x_continuous(limits=c(0,22)) +
geom_boxplot(data=gran1, aes(x=worker_start_tstamp - host_job_create_tstamp, y="FaaS", fill="1"), outlier.size = 0.1) +
geom_boxplot(data=gran2, aes(x=worker_start_tstamp - host_job_create_tstamp, y="2", fill="2")) +
geom_boxplot(data=gran4, aes(x=worker_start_tstamp - host_job_create_tstamp, y="4", fill="2")) +
geom_boxplot(data=gran6, aes(x=worker_start_tstamp - host_job_create_tstamp, y="6", fill="2")) +
geom_boxplot(data=gran12, aes(x=worker_start_tstamp - host_job_create_tstamp, y="12", fill="2")) +
geom_boxplot(data=gran24, aes(x=worker_start_tstamp - host_job_create_tstamp, y="24", fill="2")) +
geom_boxplot(data=gran48, aes(x=worker_start_tstamp - host_job_create_tstamp, y="48", fill="2")) +
#xlab("Startup time (s)") +
#ylab("Granularity") +
#disable x and y axis labels
labs(x = NULL, y = NULL) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "none", text = element_text(family = "Linux Libertine")) +
#   set title 10px
theme(plot.title = element_text(size=10)) +
# set axis title 8px
theme(axis.title.x = element_text(size=8), axis.title.y = element_text(size=8)) +
# quit horizontal grid
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
return(g)
}
# generate_boxplot <- function(size) {
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
# generate_boxplot <- function(size) {
size = 48
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
gran2 <- read.csv(paste(size, "/gran2.csv", sep=''), header=TRUE, sep=",")
gran4 <- read.csv(paste(size, "/gran4.csv", sep=''), header=TRUE, sep=",")
gran6 <- read.csv(paste(size, "/gran6.csv", sep=''), header=TRUE, sep=",")
gran12 <- read.csv(paste(size, "/gran12.csv", sep=''), header=TRUE, sep=",")
gran24 <- read.csv(paste(size, "/gran24.csv", sep=''), header=TRUE, sep=",")
gran48 <- read.csv(paste(size, "/gran48.csv", sep=''), header=TRUE, sep=",")
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp))
g <- ggplot() +
scale_y_discrete(limits=c("FaaS", "2", "4", "6", "12", "24", "48")) +
scale_x_continuous(limits=c(0,22)) +
geom_boxplot(data=gran1, aes(x=worker_start_tstamp - host_job_create_tstamp, y="FaaS", fill="1"), outlier.size = 0.1) +
geom_boxplot(data=gran2, aes(x=worker_start_tstamp - host_job_create_tstamp, y="2", fill="2")) +
geom_boxplot(data=gran4, aes(x=worker_start_tstamp - host_job_create_tstamp, y="4", fill="2")) +
geom_boxplot(data=gran6, aes(x=worker_start_tstamp - host_job_create_tstamp, y="6", fill="2")) +
geom_boxplot(data=gran12, aes(x=worker_start_tstamp - host_job_create_tstamp, y="12", fill="2")) +
geom_boxplot(data=gran24, aes(x=worker_start_tstamp - host_job_create_tstamp, y="24", fill="2")) +
geom_boxplot(data=gran48, aes(x=worker_start_tstamp - host_job_create_tstamp, y="48", fill="2")) +
#xlab("Startup time (s)") +
#ylab("Granularity") +
#disable x and y axis labels
labs(x = NULL, y = NULL) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "none", text = element_text(family = "Linux Libertine")) +
#   set title 10px
theme(plot.title = element_text(size=10)) +
# set axis title 8px
theme(axis.title.x = element_text(size=8), axis.title.y = element_text(size=8)) +
# quit horizontal grid
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
# return(g)
# }
# generate_boxplot <- function(size) {
size = 48
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
gran2 <- read.csv(paste(size, "/gran2.csv", sep=''), header=TRUE, sep=",")
gran4 <- read.csv(paste(size, "/gran4.csv", sep=''), header=TRUE, sep=",")
gran6 <- read.csv(paste(size, "/gran6.csv", sep=''), header=TRUE, sep=",")
gran12 <- read.csv(paste(size, "/gran12.csv", sep=''), header=TRUE, sep=",")
gran24 <- read.csv(paste(size, "/gran24.csv", sep=''), header=TRUE, sep=",")
gran48 <- read.csv(paste(size, "/gran48.csv", sep=''), header=TRUE, sep=",")
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 99))
# generate_boxplot <- function(size) {
size = 48
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
gran2 <- read.csv(paste(size, "/gran2.csv", sep=''), header=TRUE, sep=",")
gran4 <- read.csv(paste(size, "/gran4.csv", sep=''), header=TRUE, sep=",")
gran6 <- read.csv(paste(size, "/gran6.csv", sep=''), header=TRUE, sep=",")
gran12 <- read.csv(paste(size, "/gran12.csv", sep=''), header=TRUE, sep=",")
gran24 <- read.csv(paste(size, "/gran24.csv", sep=''), header=TRUE, sep=",")
gran48 <- read.csv(paste(size, "/gran48.csv", sep=''), header=TRUE, sep=",")
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 099))
# generate_boxplot <- function(size) {
size = 48
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
gran2 <- read.csv(paste(size, "/gran2.csv", sep=''), header=TRUE, sep=",")
gran4 <- read.csv(paste(size, "/gran4.csv", sep=''), header=TRUE, sep=",")
gran6 <- read.csv(paste(size, "/gran6.csv", sep=''), header=TRUE, sep=",")
gran12 <- read.csv(paste(size, "/gran12.csv", sep=''), header=TRUE, sep=",")
gran24 <- read.csv(paste(size, "/gran24.csv", sep=''), header=TRUE, sep=",")
gran48 <- read.csv(paste(size, "/gran48.csv", sep=''), header=TRUE, sep=",")
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 0.99))
g <- ggplot() +
scale_y_discrete(limits=c("FaaS", "2", "4", "6", "12", "24", "48")) +
scale_x_continuous(limits=c(0,22)) +
geom_boxplot(data=gran1, aes(x=worker_start_tstamp - host_job_create_tstamp, y="FaaS", fill="1"), outlier.size = 0.1) +
geom_boxplot(data=gran2, aes(x=worker_start_tstamp - host_job_create_tstamp, y="2", fill="2")) +
geom_boxplot(data=gran4, aes(x=worker_start_tstamp - host_job_create_tstamp, y="4", fill="2")) +
geom_boxplot(data=gran6, aes(x=worker_start_tstamp - host_job_create_tstamp, y="6", fill="2")) +
geom_boxplot(data=gran12, aes(x=worker_start_tstamp - host_job_create_tstamp, y="12", fill="2")) +
geom_boxplot(data=gran24, aes(x=worker_start_tstamp - host_job_create_tstamp, y="24", fill="2")) +
geom_boxplot(data=gran48, aes(x=worker_start_tstamp - host_job_create_tstamp, y="48", fill="2")) +
#xlab("Startup time (s)") +
#ylab("Granularity") +
#disable x and y axis labels
labs(x = NULL, y = NULL) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "none", text = element_text(family = "Linux Libertine")) +
#   set title 10px
theme(plot.title = element_text(size=10)) +
# set axis title 8px
theme(axis.title.x = element_text(size=8), axis.title.y = element_text(size=8)) +
# quit horizontal grid
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
# return(g)
# }
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 0.99))
# generate_boxplot <- function(size) {
size = 48
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
gran2 <- read.csv(paste(size, "/gran2.csv", sep=''), header=TRUE, sep=",")
gran4 <- read.csv(paste(size, "/gran4.csv", sep=''), header=TRUE, sep=",")
gran6 <- read.csv(paste(size, "/gran6.csv", sep=''), header=TRUE, sep=",")
gran12 <- read.csv(paste(size, "/gran12.csv", sep=''), header=TRUE, sep=",")
gran24 <- read.csv(paste(size, "/gran24.csv", sep=''), header=TRUE, sep=",")
gran48 <- read.csv(paste(size, "/gran48.csv", sep=''), header=TRUE, sep=",")
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 0.99))
print(quantile(gran2$worker_start_tstamp - gran2$host_job_create_tstamp, 0.99))
print(quantile(gran4$worker_start_tstamp - gran4$host_job_create_tstamp, 0.99))
print(quantile(gran6$worker_start_tstamp - gran6$host_job_create_tstamp, 0.99))
print(quantile(gran12$worker_start_tstamp - gran12$host_job_create_tstamp, 0.99))
print(quantile(gran24$worker_start_tstamp - gran24$host_job_create_tstamp, 0.99))
print(quantile(gran48$worker_start_tstamp - gran48$host_job_create_tstamp, 0.99))
#same with 0.5 quantile
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 0.5))
print(quantile(gran2$worker_start_tstamp - gran2$host_job_create_tstamp, 0.5))
print(quantile(gran4$worker_start_tstamp - gran4$host_job_create_tstamp, 0.5))
print(quantile(gran6$worker_start_tstamp - gran6$host_job_create_tstamp, 0.5))
print(quantile(gran12$worker_start_tstamp - gran12$host_job_create_tstamp, 0.5))
print(quantile(gran24$worker_start_tstamp - gran24$host_job_create_tstamp, 0.5))
print(quantile(gran48$worker_start_tstamp - gran48$host_job_create_tstamp, 0.5))
g <- ggplot() +
scale_y_discrete(limits=c("FaaS", "2", "4", "6", "12", "24", "48")) +
scale_x_continuous(limits=c(0,22)) +
geom_boxplot(data=gran1, aes(x=worker_start_tstamp - host_job_create_tstamp, y="FaaS", fill="1"), outlier.size = 0.1) +
geom_boxplot(data=gran2, aes(x=worker_start_tstamp - host_job_create_tstamp, y="2", fill="2")) +
geom_boxplot(data=gran4, aes(x=worker_start_tstamp - host_job_create_tstamp, y="4", fill="2")) +
geom_boxplot(data=gran6, aes(x=worker_start_tstamp - host_job_create_tstamp, y="6", fill="2")) +
geom_boxplot(data=gran12, aes(x=worker_start_tstamp - host_job_create_tstamp, y="12", fill="2")) +
geom_boxplot(data=gran24, aes(x=worker_start_tstamp - host_job_create_tstamp, y="24", fill="2")) +
geom_boxplot(data=gran48, aes(x=worker_start_tstamp - host_job_create_tstamp, y="48", fill="2")) +
#xlab("Startup time (s)") +
#ylab("Granularity") +
#disable x and y axis labels
labs(x = NULL, y = NULL) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "none", text = element_text(family = "Linux Libertine")) +
#   set title 10px
theme(plot.title = element_text(size=10)) +
# set axis title 8px
theme(axis.title.x = element_text(size=8), axis.title.y = element_text(size=8)) +
# quit horizontal grid
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
# return(g)
# }
# generate_boxplot <- function(size) {
size = 960
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
gran2 <- read.csv(paste(size, "/gran2.csv", sep=''), header=TRUE, sep=",")
gran4 <- read.csv(paste(size, "/gran4.csv", sep=''), header=TRUE, sep=",")
gran6 <- read.csv(paste(size, "/gran6.csv", sep=''), header=TRUE, sep=",")
gran12 <- read.csv(paste(size, "/gran12.csv", sep=''), header=TRUE, sep=",")
gran24 <- read.csv(paste(size, "/gran24.csv", sep=''), header=TRUE, sep=",")
gran48 <- read.csv(paste(size, "/gran48.csv", sep=''), header=TRUE, sep=",")
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 0.99))
print(quantile(gran2$worker_start_tstamp - gran2$host_job_create_tstamp, 0.99))
# print(quantile(gran4$worker_start_tstamp - gran4$host_job_create_tstamp, 0.99))
print(quantile(gran6$worker_start_tstamp - gran6$host_job_create_tstamp, 0.99))
print(quantile(gran12$worker_start_tstamp - gran12$host_job_create_tstamp, 0.99))
print(quantile(gran24$worker_start_tstamp - gran24$host_job_create_tstamp, 0.99))
print(quantile(gran48$worker_start_tstamp - gran48$host_job_create_tstamp, 0.99))
#same with 0.5 quantile
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 0.5))
print(quantile(gran2$worker_start_tstamp - gran2$host_job_create_tstamp, 0.5))
print(quantile(gran4$worker_start_tstamp - gran4$host_job_create_tstamp, 0.5))
print(quantile(gran6$worker_start_tstamp - gran6$host_job_create_tstamp, 0.5))
print(quantile(gran12$worker_start_tstamp - gran12$host_job_create_tstamp, 0.5))
print(quantile(gran24$worker_start_tstamp - gran24$host_job_create_tstamp, 0.5))
print(quantile(gran48$worker_start_tstamp - gran48$host_job_create_tstamp, 0.5))
g <- ggplot() +
scale_y_discrete(limits=c("FaaS", "2", "4", "6", "12", "24", "48")) +
scale_x_continuous(limits=c(0,22)) +
geom_boxplot(data=gran1, aes(x=worker_start_tstamp - host_job_create_tstamp, y="FaaS", fill="1"), outlier.size = 0.1) +
geom_boxplot(data=gran2, aes(x=worker_start_tstamp - host_job_create_tstamp, y="2", fill="2")) +
geom_boxplot(data=gran4, aes(x=worker_start_tstamp - host_job_create_tstamp, y="4", fill="2")) +
geom_boxplot(data=gran6, aes(x=worker_start_tstamp - host_job_create_tstamp, y="6", fill="2")) +
geom_boxplot(data=gran12, aes(x=worker_start_tstamp - host_job_create_tstamp, y="12", fill="2")) +
geom_boxplot(data=gran24, aes(x=worker_start_tstamp - host_job_create_tstamp, y="24", fill="2")) +
geom_boxplot(data=gran48, aes(x=worker_start_tstamp - host_job_create_tstamp, y="48", fill="2")) +
#xlab("Startup time (s)") +
#ylab("Granularity") +
#disable x and y axis labels
labs(x = NULL, y = NULL) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "none", text = element_text(family = "Linux Libertine")) +
#   set title 10px
theme(plot.title = element_text(size=10)) +
# set axis title 8px
theme(axis.title.x = element_text(size=8), axis.title.y = element_text(size=8)) +
# quit horizontal grid
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
# return(g)
# }
theme(plot.title = element_text(hjust = 0.5), legend.position = "none", text = element_text(family = "Linux Libertine")) + SZ
Z
Z
setwd('../invocation')
library(ggplot2)
library(ggthemes)
generate_inv_plot <- function(size) {
filename = paste("960/gran", size, ".csv", sep='')
df <- read.csv(filename, header=TRUE, sep=",")
# rename column worker_start_tstamp to start
df$start <- df$worker_start_tstamp - min(df$host_job_create_tstamp)
df$end <- df$worker_end_tstamp - min(df$host_job_create_tstamp)
df$submit <- df$host_job_create_tstamp - min(df$host_job_create_tstamp)
df2 <- data.frame(start=seq(0, max(df$end)+1, 0.01))
df2$concurrent <- sapply(df2$start, function(x) sum(df$start <= x & df$end >= x))
# order by hostname and after by start
df <- df[order(df$hostname, df$start),]
max_start <- max(df$start)
max_start_index <- which.max(df$start)
#make that each 4 hostnames the color will be the same (4 colors) Ex: red = 0,4,8,12...; blue = 1,5,9,13...; green = 2,6,10,14...; yellow = 3,7,11,15...
# setting hostname = hostname %% 4
df$hostname <- df$hostname %% 4
df$hostname <- as.factor(df$hostname)
# create or overwrite id column wth numbers from 0 to n-1
df$id <- seq.int(nrow(df))-1
g <- ggplot(df, aes(y=id))
g <- g + scale_x_continuous(limits=c(0, 25))
g <- g + geom_segment(size=0.2, aes(xend=end, x=start, yend=id, color=hostname))
#g <- g + geom_point(aes(x=submit, y=id), color="#bfbf01", size=0.05)+ geom_line(data=df2, aes(x=start, y=concurrent), color="black", size=0.6)
g <- g + geom_point(x=max_start, y=max_start_index, color="black", fill="green", size=1.4, shape=23)
print(max_start)
#set linux libertine font
g <- g + theme_minimal() + scale_color_manual(values=rev(c("#e66101", "#fdb863", "#b2abd2", "#5e3c99")))
#quitar las lineas horizontal del grid (las verticales dejarlas)
g <- g + theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
g <- g + labs(x = NULL, y = NULL)
g <- g + theme(text = element_text(family = "Linux Libertine"), legend.position = "none")
return(g)
}
library(ggplot2)
library(ggthemes)
library(gridExtra)
library(grid)
source("generate_inv_plot.R")
g1 <- generate_inv_plot(1)
g2 <- generate_inv_plot(48)
grid.arrange(g1, g2, ncol=2,
bottom=textGrob("Time (s)", gp=gpar(fontsize=10, fontfamily="Linux Libertine")),
left=textGrob("# activation", gp=gpar(fontsize=10, fontfamily="Linux Libertine"), rot=90))
library(ggplot2)
library(ggthemes)
library(gridExtra)
library(grid)
source("generate_inv_plot.R")
g1 <- generate_inv_plot(1)
g2 <- generate_inv_plot(48)
grid.arrange(g1, g2, ncol=2,
bottom=textGrob("Time (s)", gp=gpar(fontsize=10, fontfamily="Linux Libertine")),
left=textGrob("# activation", gp=gpar(fontsize=10, fontfamily="Linux Libertine"), rot=90))
ggsave(
filename = "invocation-paper.pdf",
plot = g,
device = cairo_pdf,
width = 83,
height = 35,
units = "mm"
)
library(ggplot2)
library(ggthemes)
library(gridExtra)
library(grid)
source("generate_inv_plot.R")
g1 <- generate_inv_plot(1)
g2 <- generate_inv_plot(48)
g <- grid.arrange(g1, g2, ncol=2,
bottom=textGrob("Time (s)", gp=gpar(fontsize=10, fontfamily="Linux Libertine")),
left=textGrob("# activation", gp=gpar(fontsize=10, fontfamily="Linux Libertine"), rot=90))
ggsave(
filename = "invocation-paper.pdf",
plot = g,
device = cairo_pdf,
width = 83,
height = 35,
units = "mm"
)
library(ggplot2)
library(ggthemes)
generate_inv_plot <- function(size) {
filename = paste("960/gran", size, ".csv", sep='')
df <- read.csv(filename, header=TRUE, sep=",")
# rename column worker_start_tstamp to start
df$start <- df$worker_start_tstamp - min(df$host_job_create_tstamp)
df$end <- df$worker_end_tstamp - min(df$host_job_create_tstamp)
df$submit <- df$host_job_create_tstamp - min(df$host_job_create_tstamp)
df2 <- data.frame(start=seq(0, max(df$end)+1, 0.01))
df2$concurrent <- sapply(df2$start, function(x) sum(df$start <= x & df$end >= x))
# order by hostname and after by start
df <- df[order(df$hostname, df$start),]
max_start <- max(df$start)
max_start_index <- which.max(df$start)
#make that each 4 hostnames the color will be the same (4 colors) Ex: red = 0,4,8,12...; blue = 1,5,9,13...; green = 2,6,10,14...; yellow = 3,7,11,15...
# setting hostname = hostname %% 4
df$hostname <- df$hostname %% 4
df$hostname <- as.factor(df$hostname)
# create or overwrite id column wth numbers from 0 to n-1
df$id <- seq.int(nrow(df))-1
g <- ggplot(df, aes(y=id))
g <- g + scale_x_continuous(limits=c(0, 25))
g <- g + geom_segment(size=0.2, aes(xend=end, x=start, yend=id, color=hostname))
g <- g + geom_point(aes(x=submit, y=id), color="#bfbf01", size=0.05)+ geom_line(data=df2, aes(x=start, y=concurrent), color="black", size=0.6)
g <- g + geom_point(x=max_start, y=max_start_index, color="black", fill="green", size=1.4, shape=23)
print(max_start)
#set linux libertine font
g <- g + theme_minimal() + scale_color_manual(values=rev(c("#e66101", "#fdb863", "#b2abd2", "#5e3c99")))
#quitar las lineas horizontal del grid (las verticales dejarlas)
g <- g + theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
g <- g + labs(x = NULL, y = NULL)
g <- g + theme(text = element_text(family = "Linux Libertine"), legend.position = "none")
return(g)
}
library(ggplot2)
library(ggthemes)
library(gridExtra)
library(grid)
source("generate_inv_plot.R")
g1 <- generate_inv_plot(1)
g2 <- generate_inv_plot(48)
g <- grid.arrange(g1, g2, ncol=2,
bottom=textGrob("Time (s)", gp=gpar(fontsize=10, fontfamily="Linux Libertine")),
left=textGrob("# activation", gp=gpar(fontsize=10, fontfamily="Linux Libertine"), rot=90))
ggsave(
filename = "invocation-paper.pdf",
plot = g,
device = cairo_pdf,
width = 83,
height = 35,
units = "mm"
)
library(ggplot2)
library(ggthemes)
library(gridExtra)
library(grid)
source("generate_inv_plot.R")
g1 <- generate_inv_plot(1)
g2 <- generate_inv_plot(48)
g <- grid.arrange(g1, g2, ncol=2,
bottom=textGrob("Time (s)", gp=gpar(fontsize=10, fontfamily="Linux Libertine")),
left=textGrob("# activation", gp=gpar(fontsize=10, fontfamily="Linux Libertine"), rot=90))
ggsave(
filename = "invocation-paper.pdf",
plot = g,
device = cairo_pdf,
width = 83,
height = 35,
units = "mm"
)
library(ggplot2)
library(ggthemes)
generate_inv_plot <- function(size) {
filename = paste("960/gran", size, ".csv", sep='')
df <- read.csv(filename, header=TRUE, sep=",")
# rename column worker_start_tstamp to start
df$start <- df$worker_start_tstamp - min(df$host_job_create_tstamp)
df$end <- df$worker_end_tstamp - min(df$host_job_create_tstamp)
df$submit <- df$host_job_create_tstamp - min(df$host_job_create_tstamp)
df2 <- data.frame(start=seq(0, max(df$end)+1, 0.01))
df2$concurrent <- sapply(df2$start, function(x) sum(df$start <= x & df$end >= x))
# order by hostname and after by start
df <- df[order(df$hostname, df$start),]
max_start <- max(df$start)
max_start_index <- which.max(df$start)
#make that each 4 hostnames the color will be the same (4 colors) Ex: red = 0,4,8,12...; blue = 1,5,9,13...; green = 2,6,10,14...; yellow = 3,7,11,15...
# setting hostname = hostname %% 4
df$hostname <- df$hostname %% 4
df$hostname <- as.factor(df$hostname)
# create or overwrite id column wth numbers from 0 to n-1
df$id <- seq.int(nrow(df))-1
g <- ggplot(df, aes(y=id))
g <- g + scale_x_continuous(limits=c(0, 25))
g <- g + geom_segment(size=0.2, aes(xend=end, x=start, yend=id, color=hostname))
g <- g + geom_line(data=df2, aes(x=start, y=concurrent), color="black", size=0.6)
g <- g + geom_point(x=max_start, y=max_start_index, color="black", fill="green", size=1.4, shape=23)
print(max_start)
#set linux libertine font
g <- g + theme_minimal() + scale_color_manual(values=rev(c("#e66101", "#fdb863", "#b2abd2", "#5e3c99")))
#quitar las lineas horizontal del grid (las verticales dejarlas)
g <- g + theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
g <- g + labs(x = NULL, y = NULL)
g <- g + theme(text = element_text(family = "Linux Libertine"), legend.position = "none")
return(g)
}
library(ggplot2)
library(ggthemes)
library(gridExtra)
library(grid)
source("generate_inv_plot.R")
g1 <- generate_inv_plot(1)
g2 <- generate_inv_plot(48)
g <- grid.arrange(g1, g2, ncol=2,
bottom=textGrob("Time (s)", gp=gpar(fontsize=10, fontfamily="Linux Libertine")),
left=textGrob("# activation", gp=gpar(fontsize=10, fontfamily="Linux Libertine"), rot=90))
ggsave(
filename = "invocation-paper.pdf",
plot = g,
device = cairo_pdf,
width = 83,
height = 35,
units = "mm"
)
# generate_boxplot <- function(size) {
size = 960
gran1 <- read.csv(paste(size, "/gran1.csv", sep=''), header=TRUE, sep=",")
gran2 <- read.csv(paste(size, "/gran2.csv", sep=''), header=TRUE, sep=",")
gran4 <- read.csv(paste(size, "/gran4.csv", sep=''), header=TRUE, sep=",")
gran6 <- read.csv(paste(size, "/gran6.csv", sep=''), header=TRUE, sep=",")
gran12 <- read.csv(paste(size, "/gran12.csv", sep=''), header=TRUE, sep=",")
gran24 <- read.csv(paste(size, "/gran24.csv", sep=''), header=TRUE, sep=",")
gran48 <- read.csv(paste(size, "/gran48.csv", sep=''), header=TRUE, sep=",")
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 0.99))
print(quantile(gran2$worker_start_tstamp - gran2$host_job_create_tstamp, 0.99))
print(quantile(gran4$worker_start_tstamp - gran4$host_job_create_tstamp, 0.99))
print(quantile(gran6$worker_start_tstamp - gran6$host_job_create_tstamp, 0.99))
print(quantile(gran12$worker_start_tstamp - gran12$host_job_create_tstamp, 0.99))
print(quantile(gran24$worker_start_tstamp - gran24$host_job_create_tstamp, 0.99))
print(quantile(gran48$worker_start_tstamp - gran48$host_job_create_tstamp, 0.99))
#same with 0.5 quantile
print(quantile(gran1$worker_start_tstamp - gran1$host_job_create_tstamp, 0.5))
print(quantile(gran2$worker_start_tstamp - gran2$host_job_create_tstamp, 0.5))
print(quantile(gran4$worker_start_tstamp - gran4$host_job_create_tstamp, 0.5))
print(quantile(gran6$worker_start_tstamp - gran6$host_job_create_tstamp, 0.5))
print(quantile(gran12$worker_start_tstamp - gran12$host_job_create_tstamp, 0.5))
print(quantile(gran24$worker_start_tstamp - gran24$host_job_create_tstamp, 0.5))
print(quantile(gran48$worker_start_tstamp - gran48$host_job_create_tstamp, 0.5))
g <- ggplot() +
scale_y_discrete(limits=c("FaaS", "2", "4", "6", "12", "24", "48")) +
scale_x_continuous(limits=c(0,22)) +
geom_boxplot(data=gran1, aes(x=worker_start_tstamp - host_job_create_tstamp, y="FaaS", fill="1"), outlier.size = 0.1) +
geom_boxplot(data=gran2, aes(x=worker_start_tstamp - host_job_create_tstamp, y="2", fill="2")) +
geom_boxplot(data=gran4, aes(x=worker_start_tstamp - host_job_create_tstamp, y="4", fill="2")) +
geom_boxplot(data=gran6, aes(x=worker_start_tstamp - host_job_create_tstamp, y="6", fill="2")) +
geom_boxplot(data=gran12, aes(x=worker_start_tstamp - host_job_create_tstamp, y="12", fill="2")) +
geom_boxplot(data=gran24, aes(x=worker_start_tstamp - host_job_create_tstamp, y="24", fill="2")) +
geom_boxplot(data=gran48, aes(x=worker_start_tstamp - host_job_create_tstamp, y="48", fill="2")) +
#xlab("Startup time (s)") +
#ylab("Granularity") +
#disable x and y axis labels
labs(x = NULL, y = NULL) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5), legend.position = "none", text = element_text(family = "Linux Libertine")) +
#   set title 10px
theme(plot.title = element_text(size=10)) +
# set axis title 8px
theme(axis.title.x = element_text(size=8), axis.title.y = element_text(size=8)) +
# quit horizontal grid
theme(panel.grid.major.y = element_blank(), panel.grid.minor.y = element_blank())
# return(g)
# }
